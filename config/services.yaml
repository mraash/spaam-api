parameters:
    exceptions:
        # Symfony exceptions
        Symfony\Component\HttpKernel\Exception\NotFoundHttpException: { httpCode: 404, visible: true },
        Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException: { httpCode: 405, visible: true },

        # Temporarily customize authentication errors
        Symfony\Component\HttpKernel\Exception\BadRequestHttpException: { httpCode: 400, visible: true },
        Symfony\Component\Security\Core\Exception\AccessDeniedException: { httpCode: 403, visible: true },

        # App exceptions
        SymfonyExtension\Http\ArgumentResolver\Input\Exception\RequestBodyConvertException: { httpCode: 400, visible: true },
        App\Domain\Service\User\Exceptions\UserAlreadyExistsException: { httpCode: 400, visible: true },
        App\Domain\Service\VkAccount\Exception\VkAccountAlreadyAdded: { httpCode: 400, visible: true },

services:
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            bool $isDev: '@=container.getParameter("kernel.environment") == "dev"'
            bool $isProd: '@=container.getParameter("kernel.environment") == "prod"'
            bool $isDebug: '%kernel.debug%'
            int $vkAppId: '%env(MY_VK_APP)%'

    # Namespaces
    App\:
        resource: '../src/App/'
        exclude:
            - '../src/App/Domain/Entity/'
            - '../src/App/Kernel.php'
    SymfonyExtension\:
        resource: '../src/SymfonyExtension/'


    # Services
    App\Http\ExceptionHandler\Uncaught\ExceptionResolver:
        arguments:
            $rawMetadataList: '%exceptions%'

    # Listeners
    App\Http\ExceptionHandler\Uncaught\ApiExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception, priority: 10 }
    App\Http\ExceptionHandler\Validation\ValidationExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception, priority: 15 }
    App\Security\JwtCreatedListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created }
